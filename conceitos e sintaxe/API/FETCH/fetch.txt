

import React, {useEffect,useState} from 'react';

const Fetcher = () => {
  const [current_data,setData] = useState([]);
  const [is_loading, setLoading] = useState(true)
  useEffect(()=>{//useEffect com array [] para garantir que a requisição so é feita quando o componente é renderizado
     fetch(`https://jsonplaceholder.typicode.com/posts`)
    .then((response) => //essa arrow function nao pode ter {}, pois ela deve retornar o json e com {} so executa funções
      response.json() 
    )
    .then((data) => {
      setData(data);
      setLoading(false)
      }
     )
    .catch((error)=> {
      console.log(`Following error fetching data: ${error}`)
      }
    )
  }
  ,[])//o array para garantir que a requisição so é feita quando o componente é renderizado
  return (
      is_loading ? (
        <p>Loading data...</p>
      ) :(current_data.length?(current_data.map((e)=><li> {e.title} </li>)):(<div>Data not found</div>))) //devemos testar o length porque {} nao é falsy
};
